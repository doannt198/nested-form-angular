function traverse(o) {
    for (var i in o) {
        if (Array.isArray(o[i].children) && o[i].children.length) {
            console.log('C:', o[i]);
            traverse(o[i].children);
        } else {
            console.log(i, o[i]);
        }
    }
}

loopEveryNodeTree(list): void {
    for (let i = 0; i < list.length; i++) {
        if (Array.isArray(list[i].children) && list[i].children.length) {
          list[i] = this.getNode(list[i]);
          this.loopEveryNodeTree(list[i].children);
        } else {
          list[i] = this.getNode(list[i]);
        }
    }
  }

  getFormTypes(): void {
    this.apiService.getFormTypes()
    .pipe(
      finalize(() => this.spinner.hide())
    )
    .subscribe(response => {
      const data = response.data;
      this.loopEveryNodeTree(data);
      this.formTypes = data;
    })
  }

Dạng riêng then form thêm 

export function findNodeInTree(list, nodeId): any {
  for (let i = 0; i < list.length; i++) {
      if (Array.isArray(list[i].children) && list[i].children.length) {
        findNodeInTree(list[i].children, nodeId);
      } else {
        if (list[i].data === nodeId ) {
            return list[i];
        }
      }
  }
}
